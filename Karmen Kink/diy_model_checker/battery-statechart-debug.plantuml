@startuml
title Battery
state "Battery Level" as BatteryLevel {
  [*] --> Empty
  state "Full" as Full {
    Full --> 80charged : forward 10 min [switch_on == False and neg_counter == 2] / pos_counter = 0; neg_counter = 0
    Full --> Full : forward 10 min [switch_on == False and neg_counter < 2] / neg_counter + 1
  }
  state "80% charged" as 80charged {
    80charged --> 60charged : forward 10 min [switch_on == False and neg_counter == 2] / pos_counter = 0; neg_counter = 0
    80charged --> 80charged : forward 10 min [switch_on == False and neg_counter < 2] / neg_counter + 1
  }
  state "60% charged" as 60charged {
    60charged --> 80charged : forward 10 min [switch_on == True and pos_counter == 2] / pos_counter = 0; neg_counter = 0; switch_on = False
    60charged --> 40charged : forward 10 min [switch_on == False and neg_counter == 2] / pos_counter = 0; neg_counter = 0
    60charged --> 60charged : forward 10 min [switch_on == True and pos_counter < 2] / pos_counter + 1
    60charged --> 60charged : forward 10 min [switch_on == False and neg_counter < 2] / neg_counter + 1
    60charged --> 60charged : turn switch on [switch_on == False] / switch_on = True; pos_counter = 0
  }
  state "40% charged" as 40charged {
    40charged --> 60charged : forward 10 min [switch_on == True and pos_counter == 2] / pos_counter = 0; neg_counter = 0
    40charged --> 25charged : forward 10 min [switch_on == False and neg_counter == 2] / pos_counter = 0; neg_counter = 0
    40charged --> 40charged : forward 10 min [switch_on == True and pos_counter < 2] / pos_counter + 1
    40charged --> 40charged : forward 10 min [switch_on == False and neg_counter < 2] / neg_counter + 1
    40charged --> 40charged : turn switch on [switch_on == False] / switch_on = True; pos_counter = 0
  }
  state "25% charged" as 25charged {
    25charged --> 40charged : forward 10 min [switch_on == True and pos_counter == 2] / pos_counter = 0; neg_counter = 0
    25charged --> Empty : forward 10 min [switch_on == False and neg_counter == 2] / pos_counter = 0; neg_counter = 0
    25charged --> 25charged : forward 10 min [switch_on == True and pos_counter < 2] / pos_counter + 1
    25charged --> 25charged : forward 10 min [switch_on == False and neg_counter < 2] / neg_counter + 1
    25charged --> 25charged : turn switch on [switch_on == False] / switch_on = True; pos_counter = 0
  }
  state "Empty" as Empty {
    Empty --> 25charged : forward 10 minutes [switch_on == True and pos_counter == 2] / pos_counter = 0; neg_counter = 0
    Empty --> Empty : forward 10 minutes (repeat 2 times) [switch_on == True and pos_counter < 2] / pos_counter + 1
    Empty --> Empty : turn switch on [switch_on == False] / switch_on = True; pos_counter = 0
  }
}
@enduml